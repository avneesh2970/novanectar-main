/* Custom CSS for process section - NO TAILWIND DIRECTIVES */
/* Add CSS variable for viewport height to handle mobile browsers correctly */
:root {
  --vh: 1vh;
  /* Font fallback system to prevent layout shifts */
  --font-fallback: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
}

/* Font size adjustments to prevent layout shifts */
h2,
h3,
p {
  font-size-adjust: 100%;
  font-optical-sizing: auto;
}

.service-card {
  position: relative;
  width: 280px;
  aspect-ratio: 3 / 4;
  background-image: linear-gradient(to bottom right, rgba(156, 163, 175, 0.9), rgba(55, 65, 81, 0));
  border-radius: 0.75rem;
  padding: 1rem;
  overflow: hidden;
  backdrop-filter: blur(4px);
  border: 4px solid rgb(209, 213, 219);
  flex-shrink: 0;
  /* Performance optimizations */
  contain: content;
  will-change: transform;
  transform: translateZ(0);
  /* Prevent text layout shifts */
  font-family: var(--font-dm-sans, var(--font-fallback));
}

@media (min-width: 640px) {
  .service-card {
    width: 300px;
    padding: 1.5rem;
  }
}

@media (max-width: 767px) {
  .service-card {
    width: 260px;
    aspect-ratio: 3 / 4;
    /* Add contain property to prevent layout shifts */
    contain: layout size;
    /* Add height to prevent layout shifts */
    height: 400px;
  }
}

.service-card-hover {
  position: absolute;
  inset: 0;
  background-image: linear-gradient(to bottom right, rgba(37, 99, 235, 0), rgba(59, 130, 246, 0));
  transition: background-image 0.3s;
  pointer-events: none;
  border-radius: 0.75rem;
}

.service-card:hover .service-card-hover {
  background-image: linear-gradient(to bottom right, rgb(37, 99, 235), rgb(59, 130, 246));
}

.service-card-icon-container {
  width: 4rem;
  height: 4rem;
  border-radius: 9999px;
  background-color: rgba(219, 234, 254, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
  /* Prevent layout shifts */
  contain: size layout;
}

@media (min-width: 640px) {
  .service-card-icon-container {
    width: 5rem;
    height: 5rem;
    margin-bottom: 1.5rem;
  }
}

.service-card-icon {
  position: relative;
  width: 100%;
  height: 100%;
  background-color: rgb(219, 234, 254);
  color: rgb(96, 165, 250);
  border-radius: 9999px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.service-card-content {
  transition: transform 0.3s;
  /* Reserve space for text to prevent layout shifts */
  min-height: 150px;
}

.service-card:hover .service-card-content {
  transform: translateY(-0.25rem);
}

/* Update container heights to use the CSS variable */
.process-container {
  position: relative;
  width: 100%;
  background-color: rgb(17, 24, 39);
  /* Adjust height for different screen sizes */
  height: 250vh;
  /* Add containment for better performance */
  contain: layout;
}

@media (max-width: 767px) {
  .process-container {
    /* Fix mobile height to prevent excessive blue background */
    height: auto;
    min-height: fit-content;
    max-height: calc(var(--vh, 1vh) * 100); /* Use CSS variable for mobile height */
    padding: 2rem 0;
    /* Add contain property to prevent layout shifts */
    contain: paint layout;
  }
}

.process-sticky-container {
  position: sticky;
  top: 0;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  overflow: hidden;
}

@media (max-width: 767px) {
  .process-sticky-container {
    position: relative;
    height: auto;
    min-height: fit-content;
    max-height: calc(var(--vh, 1vh) * 100); /* Use CSS variable for mobile height */
    padding: 2rem 0;
    /* Add contain property to prevent layout shifts */
    contain: layout;
  }
}

.process-cards-container {
  overflow: hidden;
  height: 400px;
  contain: strict;
  width: 100%;
}

@media (max-width: 767px) {
  .process-cards-container {
    height: auto;
    min-height: 400px;
    max-height: 80vh; /* Limit height on mobile */
    padding-bottom: 1rem;
    margin-bottom: 2rem; /* Add space at bottom on mobile */
  }
}

.process-cards-row {
  display: flex;
  gap: 1rem;
  height: 100%;
  will-change: transform;
  transform: translateZ(0);
}

@media (min-width: 640px) {
  .process-cards-row {
    gap: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .process-cards-row {
    gap: 2rem;
  }
}

@media (max-width: 767px) {
  .process-cards-row {
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    /* Improve scroll performance */
    scroll-behavior: smooth;
    /* Hide scrollbar for cleaner look */
    scrollbar-width: none;
    -ms-overflow-style: none;
    /* Add padding to ensure first and last cards are properly visible */
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .process-cards-row::-webkit-scrollbar {
    display: none;
  }

  .process-cards-row > div {
    scroll-snap-align: start;
  }
}

/* Text styles with font fallback to prevent layout shifts */
.text-center {
  text-align: center;
}

.text-white {
  color: white;
}

.text-gray-200 {
  color: rgb(229, 231, 235);
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.z-10 {
  z-index: 10;
}

.inset-0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.w-full {
  width: 100%;
}

.h-full {
  height: 100%;
}

.flex {
  display: flex;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.flex-col {
  flex-direction: column;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mb-12 {
  margin-bottom: 3rem;
}

.pt-8 {
  padding-top: 2rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.leading-tight {
  line-height: 1.25;
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.text-lg {
  font-size: 1.125rem;
}

.text-base {
  font-size: 1rem;
}

.text-4xl {
  font-size: 2.25rem;
}

.font-medium {
  font-weight: 500;
}

.underline {
  text-decoration: underline;
}

/* Background gradient */
.bg-gradient-to-b {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-transparent {
  --tw-gradient-from: transparent;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
}

.via-gray-900\/100 {
  --tw-gradient-via: rgba(17, 24, 39, 1);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-via), var(--tw-gradient-to, rgba(17, 24, 39, 0));
}

.to-gray-900 {
  --tw-gradient-to: rgb(17, 24, 39);
}
